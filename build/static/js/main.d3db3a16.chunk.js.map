{"version":3,"sources":["events.js","logo.svg","factories.js","components/sidebar/sidebarOptions.js","components/sidebar/SideBar.js","components/chats/ChatHeading.js","components/chats/MessageInput.js","components/chats/Messages.js","components/chats/ChatContainer.js","components/LoginForm.js","components/layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECIEVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","PRIVTE_MESSAGE","POSITIVE","NEGATIVE","__webpack_require__","p","uuid4","require","createChatNameFromUsers","users","excludedUser","arguments","length","undefined","filter","u","name","join","getTime","date","concat","getHours","getMinutes","slice","createUser","_ref","_ref$name","_ref$socketId","socketId","id","createMessage","_ref2","_ref2$message","message","_ref2$sender","sender","time","Date","now","createChat","_ref3","_ref3$messages","messages","_ref3$users","_ref3$isCommunity","isCommunity","typingUsers","SideBarOption","_PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","_this$props","props","active","lastMessage","onClick","react_default","a","createElement","className","toUpperCase","PureComponent","defaultProps","onClock","SideBar","_this","call","handleSubmit","e","preventDefault","reciever","state","onSendPrivateMessage","addChatForUser","username","setActiveSideBar","types","CHATS","type","setState","activeSideBar","_this2","chats","activeChat","user","setActiveChat","logout","_this$state","index_esm","onSubmit","onChange","target","placeholder","USERS","ref","refs","map","chat","chatNames","find","sidebarOptions_SideBarOption","get","last","differenceBy","otheruser","title","md_index_esm","Component","ChatHeading","online","numberOfUsers","onlineText","MessageInput","blur","messageinput","isTyping","bind","assertThisInitialized","sendMessage","stopCheckingTyping","lastUpdateTime","sendTyping","startCheckingTyping","typingInterval","setInterval","clearInterval","_this3","autoComplete","onKeyUp","keyCode","v","disabled","Messages","scrollDown","container","scrollTop","scrollHeight","newProps","mes","i","ChatContainer","sendOpenPrivateMessage","socket","emit","deinitialize","off","removeSocketEvents","events","resetChat","console","log","addChat","reset","newChats","toConsumableArray","messageEvent","typingEvent","on","addMessageToChat","updateTypingChat","chatId","push","includes","communityChat","initSocket","_this$props2","values","_this$props3","SideBar_SideBar","ChatHeading_ChatHeading","Messages_Messages","MessageInput_MessageInput","LoginForm","setUser","isUser","setError","nickname","handleChange","error","htmlFor","input","textInput","socketUrl","layout","io","reconnect","ChatContainer_ChatContainer","LoginForm_LoginForm","App","layout_layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3db3a16.chunk.js","sourcesContent":["module.exports = {\r\n\tCOMMUNITY_CHAT:\"COMMUNITY_CHAT\",\r\n\tUSER_CONNECTED:\"USER_CONNECTED\",\r\n\tMESSAGE_RECIEVED:\"MESSAGE_RECIEVED\",\r\n\tMESSAGE_SENT:\"MESSAGE_SENT\",\r\n\tUSER_DISCONNECTED:\"USER_DISCONNECTED\",\r\n\tTYPING:\"TYPING\",\r\n\tVERIFY_USER:\"VERIFY_USER\",\r\n    LOGOUT:\"LOGOUT\",\r\n    PRIVTE_MESSAGE:\"PRIVTE_MESSAGE\",\r\n    POSITIVE:\"positive\",\r\n    NEGATIVE:\"negative\"\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const uuid4 = require('uuid/v4')\r\n\r\n\r\nconst createUser = ({name=\"\",socketId=null} = {})=>({\r\n    id:uuid4(),\r\n    name,\r\n    socketId\r\n})\r\n\r\nconst createMessage = ({message=\"\",sender=\"\"}={})=>({\r\n    id:uuid4(),\r\n    time:getTime(new Date(Date.now())),\r\n    message,\r\n    sender\r\n})\r\n\r\nconst createChat = ({messages=[],name=\"Community\",users=[],isCommunity=false}={})=>({\r\n    id:uuid4(),\r\n    name:isCommunity?\"Community\":createChatNameFromUsers(users),\r\n    messages,\r\n    users,\r\n    typingUsers:[],\r\n    isCommunity\r\n})\r\n\r\nconst createChatNameFromUsers = (users,excludedUser=\"\")=>{\r\n    return users.filter(u=>u.name !== excludedUser).join(\" & \")|| 'Empty Users' \r\n}\r\n\r\nconst getTime = (date)=>{\r\n    return `${date.getHours()}:${(\"0\"+date.getMinutes()).slice(-2)}`\r\n}\r\n\r\nmodule.exports = {\r\n    createUser,\r\n    createMessage,\r\n    createChat,\r\n    createChatNameFromUsers\r\n}","import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class SideBarOption extends PureComponent {\r\n\r\n    static propTypes = {\r\n        name: PropTypes.string.isRequired,\r\n        lastMessage: PropTypes.string,\r\n        active: PropTypes.bool,\r\n        onClick: PropTypes.func\r\n    }\r\n    static defaultProps = {\r\n        lastMessage: \"\",\r\n        active:false,\r\n        onClock: () => { }\r\n    }\r\n    render() {\r\n        const { active, lastMessage, name, onClick } = this.props\r\n        return (\r\n            <div \r\n                className={`user ${active ? 'active':''}`}\r\n                onClick={onClick}\r\n                >\r\n                <div className=\"user-photo\">{name[0].toUpperCase()}</div>\r\n                <div className=\"user-info\">\r\n                    <div className=\"name\">{name}</div>\r\n                    <div className=\"last-message\">{lastMessage}</div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {FaChevronDown,FaSearchengin} from 'react-icons/fa'\r\nimport {MdEject} from 'react-icons/md'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {SideBarOption} from './sidebarOptions'\r\nimport {get, last, differenceBy} from 'lodash'\r\nimport {createChatNameFromUsers} from '../../factories'\r\n// import FAMenu from 'react-icons/lib/fa/list-ul'\r\n// import FASearch from 'react-icons/lib/fa/search'\r\n// import MdEject from 'react-icons/lib/md/eject'\r\n\r\nexport default class SideBar extends Component {\r\n\r\n    static types = {\r\n\t\tUSERS:\"users\",\r\n\t\tCHATS:\"chats\"\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n    \r\n        this.state={\r\n            reciever:\"\",\r\n            activeSideBar: SideBar.types.CHATS\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        const {reciever} = this.state\r\n        const {onSendPrivateMessage} = this.props\r\n        onSendPrivateMessage(reciever)\r\n    }\r\n\r\n    addChatForUser = (username)=>{\r\n        this.setActiveSideBar(SideBar.types.CHATS)\r\n        this.props.onSendPrivateMessage(username)\r\n    }\r\n    \r\n    setActiveSideBar = (type) => {\r\n\t\tthis.setState({ activeSideBar:type })   \r\n    }\r\n\r\n    render(){\r\n        const { chats, activeChat, user,users, setActiveChat, logout } = this.props\r\n        const { reciever, activeSideBar } = this.state\r\n        return(\r\n            <div id=\"side-bar\">\r\n            <div className=\"heading\">\r\n                <div className=\"app-name\">Zanjo Chat\r\n                 <FaChevronDown />\r\n                 </div>\r\n                <div className=\"menu\">\r\n                    {/* <Menu /> */}\r\n                </div>\r\n            </div>\r\n            <form onSubmit={this.handleSubmit} className=\"search\">\r\n                <i className=\"search-icon\">\r\n                <FaSearchengin />\r\n                </i>\r\n                <input value={this.state.reciever} onChange={e=>{this.setState({reciever:e.target.value})}} placeholder=\"Search\" type=\"text\"/>\r\n                <div className=\"plus\"></div>\r\n            </form>\r\n                <div className=\"side-bar-select\">\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\tonClick = { ()=>{ this.setActiveSideBar(SideBar.types.CHATS) } }\r\n\t\t\t\t\t\t\tclassName={`side-bar-select__option ${ activeSideBar === SideBar.types.CHATS ? 'active':''}`}>\r\n\t\t\t\t\t\t\tChats \r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\tonClick = { ()=>{ this.setActiveSideBar(SideBar.types.USERS) } }\r\n\t\t\t\t\t\t\tclassName={`side-bar-select__option ${ activeSideBar === SideBar.types.USERS ? 'active':''}`}>\r\n\t\t\t\t\t\t\tUsers\r\n\t\t\t\t\t\t</button>\r\n                </div>\r\n            <div \r\n                className=\"users\" \r\n                ref='users' \r\n                onClick={(e)=>{ (e.target === this.refs.user) && setActiveChat(null) }}>\r\n                \r\n                {\r\n                    activeSideBar === SideBar.types.CHATS ?\r\n                chats.map((chat)=>{\r\n                    if(chat.name){\r\n                        // const lastMessage = chat.messages[chat.messages.length - 1];\r\n                        const chatNames = chat.users.find((name)=>{\r\n                            return name !== user.name\r\n                        }) || \"Community\"\r\n                        // console.log('sidebar',chat)\r\n                        // const classNames = (activeChat && activeChat.id === chat.id) ? 'active' : ''\r\n                        return(\r\n                            \r\n                            <SideBarOption\r\n                                key={chat.id}\r\n                                name = {chat.isCommunity ? chat.name : chatNames}\r\n                                lastMessage = {get(last(chat.messages),\"message\",\"\")}\r\n                                active = {activeChat.id === chat.id}\r\n                                onClick = {()=>{this.props.setActiveChat(chat)}}\r\n                            />\r\n                        // <div \r\n                        //     key={chat.id} \r\n                        //     className={`user ${classNames}`}\r\n                        //     onClick={ ()=>{ setActiveChat(chat) } }\r\n                        //     >\r\n                        //     <div className=\"user-photo\">{chatNames[0].toUpperCase()}</div>\r\n                        //     <div className=\"user-info\">\r\n                        //         <div className=\"name\">{chatNames}</div>\r\n                        //         {lastMessage && <div className=\"last-message\">{lastMessage.message}</div>}\r\n                        //     </div>\r\n                            \r\n                            \r\n                        \r\n                    )\r\n                    }\r\n\r\n                    return null\r\n                }\t)\r\n                \r\n                :\r\n                \r\n                    differenceBy( users,[user],\"name\").map(otheruser=>{\r\n                        return(\r\n                            <SideBarOption\r\n                                key={otheruser.id}\r\n                                name={otheruser.name}\r\n                                onClick={()=>{this.addChatForUser(otheruser.name)}}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n\r\n                \r\n            </div>\r\n            <div className=\"current-user\">\r\n                <span>{user.name}</span>\r\n                <div onClick={()=>{logout()}} title=\"Logout\" className=\"logout\">\r\n                    <MdEject/>\t\r\n                </div>\r\n            </div>\r\n        </div> \r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {FaVideo,FaUserPlus,FaEllipsisV} from 'react-icons/fa'\r\n\r\nexport default class ChatHeading extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n\t\tconst { name, online, numberOfUsers } = this.props\r\n\t\tconst onlineText = online ? 'online':'offline'\r\n\t\treturn (\r\n\t\t\t<div className=\"chat-header\">\r\n\t\t\t\t<div className=\"user-info\">\r\n\t\t\t\t\t<div className=\"user-name\">{name}</div>\r\n\t\t\t\t\t<div className=\"status\">\r\n\t\t\t\t\t\t<div className={`indicator ${onlineText}`}></div>\r\n\t\t\t\t\t\t<span>{numberOfUsers ? numberOfUsers : null} online</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"options\">\r\n\t\t\t\t\t<FaVideo />\r\n\t\t\t\t\t<FaUserPlus />\r\n\t\t\t\t\t<FaEllipsisV />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n}","import React,{Component} from 'react';\r\nimport { FaBeer } from 'react-icons/fa';\r\nimport {FaVideo,FaUserPlus,FaEllipsisV} from 'react-icons/fa'\r\n\r\nexport default class MessageInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n      \r\n        this.state = { \r\n            message:\"\", \r\n            isTyping:false\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.sendMessage = this.sendMessage.bind(this) \r\n    }\r\n    componentWillUnmount() {\r\n\t\tthis.stopCheckingTyping();\r\n\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault()\r\n        this.sendMessage()\r\n        this.setState({message:\"\"})\r\n    }\r\n    sendMessage(){\r\n\t\tthis.props.sendMessage(this.state.message)\r\n\t\tthis.blur()\r\n    } \r\n    sendTyping(){\r\n\t\tthis.lastUpdateTime = Date.now()\r\n\t\tif(!this.state.isTyping){\r\n\t\t\tthis.setState({isTyping:true})\r\n\t\t\tthis.props.sendTyping(true);\r\n\t\t\tthis.startCheckingTyping()\r\n\t\t}\r\n    } \r\n    startCheckingTyping(){\r\n\t\tthis.typingInterval = setInterval(()=>{\r\n\t\t\t\r\n\t\t\t\tif((Date.now() - this.lastUpdateTime) > 300){\r\n\t\t\t\t\tthis.setState({isTyping:false})\r\n\t\t\t\t\tthis.stopCheckingTyping()\r\n\t\t\t\t}\r\n\t\t\t}, 300)\r\n    }  \r\n    stopCheckingTyping(){\r\n\t\tif(this.typingInterval){\r\n\t\t\tclearInterval(this.typingInterval)\r\n\t\t\tthis.props.sendTyping(false)\r\n\t\t}\r\n    }  \r\n    blur = ()=>{\r\n\t\tthis.refs.messageinput.blur()\r\n    }\r\n    render(){\r\n        const { message } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"message-input\">\r\n\t\t\t\t\t<form  \r\n\t\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\t\t\tclassName=\"message-form\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tid=\"message\"\r\n\t\t\t\t\t\t\tref={\"messageinput\"}\r\n\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tvalue = { message } \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tautoComplete={'off'}\r\n\t\t\t\t\t\t\tplaceholder=\"Type something to send\"\r\n\t\t\t\t\t\t\tonKeyUp={(e)=>{ e.keyCode !== 13 && this.sendTyping() }}\r\n\t\t\t\t\t\t\tonChange = {\r\n\t\t\t\t\t\t\t\t({target:{value:v}})=>{\r\n\t\t\t\t\t\t\t\t\tthis.setState({message:v})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}/>\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\tdisabled={ message.length < 1} \r\n\t\t\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\t\t\tclassName=\"send\">Send\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n        );\r\n    }\r\n}","import React,{Component} from 'react';\r\n\r\nexport default class Messages extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.scrollDown = this.scrollDown.bind(this)\r\n      }\r\n      \r\n      scrollDown(){\r\n          const { container } = this.refs\r\n          container.scrollTop = container.scrollHeight\r\n      }\r\n      \r\n      componentDidUpdate(newProps){\r\n          this.scrollDown();\r\n  \r\n      }\r\n  \r\n      componentDidMount(){\r\n          this.scrollDown();\r\n      }\r\n  \r\n      render() {\r\n          const { messages, user, typingUsers } = this.props;\r\n          return (\r\n              <div ref={'container'} \r\n                      className=\"thread-container\">\r\n                      <div className=\"thread\">\r\n                      {\r\n                          messages.map((mes, i)=>{\r\n                              \r\n                              return( \r\n                              <div key={mes.id} className={`message-container ${mes.sender === user.name && 'right'}`}>\r\n                                  <div className=\"time\">{mes.time}</div>\r\n                                  <div className=\"data\">\r\n                                      <div className=\"message\">{mes.message}</div>\r\n                                      <div className=\"name\">{mes.sender}</div>\r\n                                  </div>\r\n                              </div>)\r\n                          })\r\n                          \r\n                      }\r\n                      {\r\n                          typingUsers.map((name)=>{\r\n                              return(\r\n                                  <div key={name} className=\"typing-user\">\r\n                                  {`${name} is typing . . .`}\r\n                                  </div>\r\n                                  )\r\n                          })\r\n                      }\r\n  \r\n                      </div>\r\n              </div>\r\n          );\r\n  }\r\n}","import React,{Component} from 'react';\r\nimport SideBar from '../sidebar/SideBar'\r\nimport {PRIVTE_MESSAGE,COMMUNITY_CHAT,MESSAGE_RECIEVED,TYPING,MESSAGE_SENT,USER_CONNECTED,USER_DISCONNECTED} from '../../events'\r\nimport ChatHeading from './ChatHeading'\r\nimport MessageInput from './MessageInput'\r\nimport Messages from './Messages'\r\nimport {values} from 'lodash'\r\n\r\nexport default class ChatContainer extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            chats:[],\r\n            users:[],\r\n            activeChat:null,\r\n            communityChat:null,\r\n        }\r\n        this.resetChat = this.resetChat.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('chat container')\r\n        const {socket} = this.props\r\n        socket.emit(COMMUNITY_CHAT,this.resetChat)\r\n        this.initSocket()\r\n    }\r\n    componentWillUnmount() {\r\n\t\tthis.deinitialize()\r\n\t}\r\n    initSocket(){\r\n        const { socket,user } = this.props\r\n        socket.on(PRIVTE_MESSAGE,this.addChat)\r\n\t\tsocket.on('connect', ()=>{\r\n\t\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n        })\r\n        socket.on(USER_CONNECTED,(users)=>{\r\n            this.setState({users:values(users)})\r\n        })\r\n        socket.on(USER_DISCONNECTED,users=>{\r\n            this.setState({users:values(users)})\r\n        })\r\n        socket.emit(PRIVTE_MESSAGE,{reciever:\"random name\",sender:user.name})\r\n    }\r\n    \r\n    sendOpenPrivateMessage = (reciever)=>{\r\n        const {socket,user} = this.props\r\n        socket.emit(PRIVTE_MESSAGE,{reciever,sender:user.name})\r\n    }\r\n\r\n    deinitialize = ()=>{\r\n\t\tconst { socket } = this.props\r\n        socket.off(PRIVTE_MESSAGE)\r\n        socket.off(USER_CONNECTED)\r\n        socket.off(USER_DISCONNECTED)\r\n    }\r\n    removeSocketEvents = (socket, events)=>{\r\n\r\n\t\tif(events.length > 0){\r\n\t\t\tsocket.off(events[0])\r\n\t\t\tthis.removeSocketEvents(socket, events.slice(1))\r\n\t\t}\r\n\t}\r\n    resetChat = (chat)=>{\r\n        console.log('reset chat')\r\n        return this.addChat(chat, true)\r\n    }\r\n\r\n    addChat = (chat,reset=true) =>{\r\n       const {socket} = this.props\r\n       const {chats} = this.state \r\n\r\n       const newChats = [...chats,chat]\r\n       this.setState({chats:newChats,activeChat:reset? chat:this.state.activeChat})\r\n\r\n       const messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`\r\n       const typingEvent = `${TYPING}-${chat.id}`\r\n\r\n       socket.on(messageEvent,this.addMessageToChat(chat.id))\r\n       socket.on(typingEvent,this.updateTypingChat(chat.id))\r\n    }\r\n    setActiveChat = (activeChat)=>{\r\n        this.setState({activeChat})\r\n    }\r\n\r\n    addMessageToChat = (chatId)=>{\r\n        return message => {\r\n            const {chats} = this.state\r\n            let newChats = chats.map(chat=>{\r\n                if(chat.id === chatId)\r\n                    chat.messages.push(message)\r\n                return chat\r\n            })\r\n\r\n            this.setState({chats:newChats})\r\n        }\r\n    }\r\n\r\n    updateTypingChat = (chatId)=>{\r\n        return ({isTyping,user})=>{\r\n            console.log('typing',chatId)\r\n            if(user !== this.props.user.name){\r\n                const {chats} = this.state\r\n\r\n                let newChats = chats.map((chat)=>{\r\n                    if(chat.id === chatId){\r\n                        if(isTyping && !chat.typingUsers.includes(user)){\r\n                            chat.typingUsers.push(user)\r\n                        }else{\r\n                            if(!isTyping && chat.typingUsers.includes(user)){\r\n                                chat.typingUsers = chat.typingUsers.filter(u => u!==user)\r\n                            }\r\n                        }\r\n                    }\r\n                    return chat\r\n                })\r\n                this.setState({chats:newChats})\r\n            }\r\n        }\r\n    }\r\n\r\n    sendMessage = (chatId, message)=>{\r\n        const {socket} = this.props\r\n        socket.emit(MESSAGE_SENT,{chatId, message})\r\n    }\r\n\r\n    sendTyping = (chatId, isTyping)=>{\r\n        const {socket} = this.props\r\n        socket.emit(TYPING,{chatId, isTyping})\r\n    }\r\n\r\n    render(){\r\n        const {user,logout} = this.props\r\n        const {chats,activeChat,users} = this.state\r\n        return (\r\n            <div className=\"container\">\r\n                <SideBar\r\n                    logout={logout}\r\n                    chats={chats}\r\n                    user={user}\r\n                    users={users}\r\n                    activeChat={activeChat}\r\n                    setActiveChat={this.setActiveChat}\r\n                    onSendPrivateMessage={this.sendOpenPrivateMessage}\r\n                ></SideBar>\r\n\r\n                <div className=\"chat-room-container\">\r\n                    {\r\n                        \r\n                        activeChat !== null ? (\r\n                            <div className=\"chat-room\">\r\n                                <ChatHeading name={activeChat.name}/>\r\n                                <Messages\r\n                                    messages={activeChat.messages}\r\n                                    user={user}\r\n                                    typingUsers={activeChat.typingUsers}\r\n                                ></Messages>\r\n                                <MessageInput\r\n                                    sendMessage={\r\n                                        (message)=>{\r\n                                            this.sendMessage(activeChat.id, message)\r\n                                        }\r\n                                    }\r\n                                    sendTyping={\r\n                                        (isTyping)=>{\r\n                                            this.sendTyping(activeChat.id, isTyping)\r\n                                        }\r\n                                    }\r\n                                ></MessageInput>\r\n                            </div>\r\n                        )  :\r\n                        <div className=\"chat-room choose\">\r\n                            <h3>Choose a Chat!</h3>\r\n                        </div>   \r\n                        \r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {VERIFY_USER} from '../events'\r\n\r\nexport default class LoginForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            nickname:\"\",\r\n            error:\"\"\r\n        }\r\n    }\r\n\r\n    setUser = ({user,isUser})=>{\r\n        console.log(user,isUser);\r\n        if(isUser){\r\n            this.setError(\"Username taken\")\r\n        }else{\r\n            this.setError(\"\")\r\n            this.props.setUser(user)\r\n            \r\n        }\r\n    }\r\n\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        const {socket} = this.props\r\n        const {nickname} = this.state\r\n        socket.emit(VERIFY_USER,nickname,this.setUser)\r\n    }\r\n\r\n    handleChange = (e)=>{\r\n        this.setState({nickname:e.target.value})\r\n    }\r\n\r\n    setError = (error)=>{\r\n        this.setState({error})\r\n    }\r\n    render(){\r\n        const {nickname,error} = this.state\r\n        return(\r\n            <div className=\"login\">\r\n                <form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <label htmlFor=\"nickname\">\r\n                        <h2>Got a nickname ?</h2>\r\n                    </label>\r\n                    <input\r\n                        ref={(input)=>{this.textInput = input}}\r\n                        type=\"text\"\r\n                        id=\"nickname\"\r\n                        value={nickname}\r\n                        onChange={this.handleChange}\r\n                        placeholder={\"MyCoolusername\"}\r\n                    ></input>\r\n                    <div>{this.state.error}</div>\r\n                </form>\r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport io from 'socket.io-client';\r\nimport {USER_CONNECTED,LOGOUT,VERIFY_USER} from '../events'\r\nimport ChatContainer from './chats/ChatContainer'\r\n\r\nimport LoginForm from './LoginForm';\r\nconst socketUrl = \"/\";\r\nexport default class layout extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            socket:null,\r\n            user:null\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.initSocket();\r\n    }\r\n\r\n    initSocket = ()=>{\r\n        const socket = io(socketUrl);\r\n        \r\n        socket.on('connect',()=>{\r\n            if(this.state.user){\r\n                this.reconnect(socket)\r\n            }else{\r\n                console.log(\"Connected\");\r\n            }\r\n            \r\n        });\r\n        this.setState({socket});\r\n    }\r\n\r\n    setUser = (user)=>{\r\n        const {socket} = this.state\r\n        socket.emit(USER_CONNECTED, user);\r\n        // console.log('setUser',user)\r\n        this.setState({user})\r\n    }\r\n\r\n    reconnect = (socket)=>{\r\n        socket.emit(VERIFY_USER,this.state.user.name,({isUser,user})=>{\r\n            if(isUser){\r\n                this.setState({user:null})\r\n            }else{\r\n                this.setUser(user)\r\n            }\r\n        })\r\n    }\r\n\r\n    logout = ()=>{\r\n        const {socket} = this.state\r\n        socket.emit(LOGOUT)\r\n        this.setState({user:null})\r\n    }\r\n    render(){\r\n        const {socket,user} = this.state\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                {\r\n                    !user ?\r\n                    <LoginForm socket={socket} setUser={this.setUser}/>\r\n                    :\r\n                    <ChatContainer socket={socket} user={user} logout={this.logout}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport app from 'firebase/app';\nimport Layout from './components/layout'\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n  }\n  render(){\n  return (\n      <Layout title=\"Chat APp baby\"></Layout>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}